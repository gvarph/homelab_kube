grafana:
  # Admin credentials
  adminPassword: admin

  # Environment variables
  env:
    GF_FEATURE_TOGGLES_ENABLE: "publicDashboards"

  # VictoriaMetrics plugins
  plugins:
    - victoriametrics-metrics-datasource
    - victoriametrics-logs-datasource

  # Configure datasources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        # VictoriaMetrics native datasource for metrics 
        - name: VictoriaMetrics
          type: victoriametrics-metrics-datasource
          access: proxy
          url: http://vmsingle-vm-k8s-stack.victoria-metrics.svc.cluster.local:8429
          isDefault: true
          jsonData:
            httpMethod: POST
            customQueryParameters: ""
        
        # Prometheus-compatible datasource for VictoriaMetrics (alternative)
        - name: VictoriaMetrics-Prometheus
          type: prometheus
          access: proxy
          url: http://vmsingle-vm-k8s-stack.victoria-metrics.svc.cluster.local:8429/prometheus
          isDefault: false
          jsonData:
            httpMethod: POST
            prometheusType: Prometheus
            prometheusVersion: "2.40.0"
        
        # VictoriaLogs native datasource
        - name: VictoriaLogs
          type: victoriametrics-logs-datasource
          access: proxy
          url: http://victoria-logs-victoria-logs-single-server.victoria-logs.svc.cluster.local:9428
          isDefault: false
        
        # VictoriaLogs Loki-compatible datasource
        - name: VictoriaLogs-Loki
          type: loki
          access: proxy
          url: http://victoria-logs-victoria-logs-single-server.victoria-logs.svc.cluster.local:9428/select/logsql/loki
          isDefault: false
          jsonData:
            maxLines: 1000

  # Provision grafana-dashboards-kubernetes
  dashboardProviders:
    enabled: true
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'grafana-dashboards-kubernetes'
        orgId: 1
        folder: 'Kubernetes'
        type: file
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
  dashboards:
    grafana-dashboards-kubernetes:
      k8s-system-api-server:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
        token: ''
      k8s-system-coredns:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
        token: ''
      k8s-views-global:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
        token: ''
      k8s-views-namespaces:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
        token: ''
      k8s-views-nodes:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
        token: ''
      k8s-views-pods:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
        token: ''

  # Enable sidecar for automatic dashboard and datasource discovery
  sidecar:
    datasources:
      enabled: true
      initDatasources: true
      label: grafana_datasource
      labelValue: "1"
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      folder: /var/lib/grafana/dashboards
      defaultFolderName: null
      provider:
        name: default
        orgid: 1
        folder: ''
        type: file
        disableDelete: false
        allowUiUpdates: true

  # Persistence
  persistence:
    enabled: true
    size: 10Gi

  # Service configuration
  service:
    type: ClusterIP
    port: 80

  # Resource limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

