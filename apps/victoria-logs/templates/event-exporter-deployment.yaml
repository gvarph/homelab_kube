apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-event-exporter
  annotations:
    # Prometheus metrics scraping
    prometheus.io/scrape: 'true'
    prometheus.io/port: '2112'
    prometheus.io/path: '/metrics'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-event-exporter
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-event-exporter
      annotations:
        # Prometheus metrics scraping
        prometheus.io/scrape: 'true'
        prometheus.io/port: '2112'
        prometheus.io/path: '/metrics'
        checksum/config: {{ include (print $.Template.BasePath "/event-exporter-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Release.Name }}-event-exporter
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: event-exporter
          image: "{{ .Values.eventExporter.image.repository }}:{{ .Values.eventExporter.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - -conf=/data/config.yaml
          volumeMounts:
            - mountPath: /data
              name: config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          resources:
            {{- toYaml .Values.eventExporter.resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: 2112
              protocol: TCP
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-event-exporter-config